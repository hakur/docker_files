FROM composer:2.4.0 as composer
WORKDIR /cve
COPY composer.json composer.json
RUN composer config -g repo.packagist composer https://mirrors.aliyun.com/composer
RUN composer install

FROM golang:1.19.0 as gomod
WORKDIR /cveproj
ENV GOPATH=/cve
COPY go.mod go.mod
RUN go env -w GOPROXY=https://goproxy.cn,direct
RUN go get github.com/beego/beego@v1.7.0
RUN go get github.com/satori/go.uuid@v1.0.0
RUN go get github.com/gin-gonic/gin@v1.3.0
RUN go get mellium.im/xmpp@v0.19.0
RUN go get github.com/ulikunitz/xz@v0.4.1
RUN go get golang.org/x/text@v0.2.0

FROM node:18.7.0-alpine3.16 as npm
WORKDIR /cve
RUN npm install -g cnpm --registry=https://registry.npm.taobao.org
COPY npm-packages.json package.json
RUN cnpm install
RUN cnpm install yui@3.10.2 yar@2.1.0 whereis@0.3.0 validator@1.0.0

FROM rust:1.63.0-alpine3.16 as cargo
WORKDIR /cve
ENV RUSTUP_DIST_SERVER="https://mirrors.ustc.edu.cn/rust-static"
ENV RUSTUP_UPDATE_ROOT="https://mirrors.ustc.edu.cn/rust-static/rustup"
RUN cargo new binproj --bin && cargo new libproj --lib
COPY cargo.config ~/.cargo/config

WORKDIR /cve/binproj
RUN mkdir .cargo
COPY cargo.config .cargo/config
COPY Cargo.toml Cargo.toml
RUN cargo update

WORKDIR /cve/libproj
RUN mkdir .cargo
COPY cargo.config .cargo/config
COPY Cargo.toml Cargo.toml
RUN cargo update

FROM ubuntu:20.04
WORKDIR /cve
RUN mkdir php && mkdir cargo && mkdir gomod && mkdir npm
COPY --from=composer /cve/* php
COPY --from=gomod /cve/* gomod
COPY --from=gomod /cveproj/* gomod
COPY --from=cargo /cve/* cargo
COPY --from=npm /cve/* npm